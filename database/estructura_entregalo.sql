-- MySQL Script generated by MySQL Workbench
-- mar 07 may 2019 09:17:19 -05
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema entregalo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema entregalo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `entregalo` DEFAULT CHARACTER SET utf8 ;
USE `entregalo` ;

-- -----------------------------------------------------
-- Table `entregalo`.`nivelGeografico1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`nivelGeografico1` (
  `nivelGeografico1` INT(11) NOT NULL COMMENT 'Identificador único del país',
  `nomNivelGeografico1` VARCHAR(50) NOT NULL COMMENT 'Nombre del país',
  `estadoNivelGeografico1` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`nivelGeografico1`))
ENGINE = InnoDB
AUTO_INCREMENT = 33
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tabla que almacena los paises';


-- -----------------------------------------------------
-- Table `entregalo`.`nivelGeografico2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`nivelGeografico2` (
  `nivelGeografico2` INT(11) NOT NULL COMMENT 'Identificador único del nivel 2',
  `idNivelGeografico1` INT(11) NOT NULL COMMENT 'Id del padre nivel 1 al que pertenece',
  `nomNivelGeografico2` VARCHAR(50) NOT NULL COMMENT 'Nombre del nivel geografico 2',
  `estadoNivelGeografico2` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`nivelGeografico2`),
  INDEX `fk_nivelGeografico2_1_idx` (`idNivelGeografico1` ASC),
  CONSTRAINT `fk_nivelGeografico2_a_nivelGeografico1`
    FOREIGN KEY (`idNivelGeografico1`)
    REFERENCES `entregalo`.`nivelGeografico1` (`nivelGeografico1`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 33
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tabla que almacena los departamentos del sistema para colombia, para otros paises pueden ser estados ';


-- -----------------------------------------------------
-- Table `entregalo`.`migration`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`migration` (
  `version` VARCHAR(180) NOT NULL,
  `apply_time` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`version`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `entregalo`.`nivelGeografico3`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`nivelGeografico3` (
  `nivelGeografico3` INT(11) NOT NULL COMMENT 'Identificador único del nivel 3',
  `idNivelGeografico2` INT(11) NOT NULL COMMENT 'Id del padre nivel 2 al que pertenece',
  `nomNivelGeografico3` VARCHAR(50) NOT NULL COMMENT 'Nombre del nivel geografico 3',
  `estadoNivelGeografico3` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`nivelGeografico3`),
  INDEX `FK_Municipio_Departamento` (`idNivelGeografico2` ASC),
  CONSTRAINT `fk_nivelGeografico3_a_nivelGeografico2`
    FOREIGN KEY (`idNivelGeografico2`)
    REFERENCES `entregalo`.`nivelGeografico2` (`nivelGeografico2`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 1103
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tabla que almacena los municipos de la aplicación para colombia, en otros paises pueden ser las ciudades';


-- -----------------------------------------------------
-- Table `entregalo`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`roles` (
  `idRol` INT(11) NOT NULL AUTO_INCREMENT,
  `nombreRol` VARCHAR(40) NOT NULL,
  `estadoRol` SMALLINT(6) NOT NULL DEFAULT '10',
  `creacionRol` DATE NOT NULL,
  PRIMARY KEY (`idRol`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `entregalo`.`rolesOperaciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`rolesOperaciones` (
  `idRolOperacion` INT(11) NOT NULL AUTO_INCREMENT,
  `nombreRolOperacion` VARCHAR(80) NOT NULL,
  `aliasRolOperacion` VARCHAR(80) NOT NULL,
  `moduloRolOperacion` VARCHAR(80) NOT NULL,
  `estadoRolOperacion` SMALLINT(6) NOT NULL DEFAULT '10',
  `creacionRolOperacion` DATE NOT NULL,
  PRIMARY KEY (`idRolOperacion`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `entregalo`.`rolesTiposOperaciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`rolesTiposOperaciones` (
  `idRolTipoOperacion` INT(11) NOT NULL AUTO_INCREMENT,
  `idRol` INT(11) NOT NULL,
  `idRolOperacion` INT(11) NOT NULL,
  PRIMARY KEY (`idRolTipoOperacion`),
  INDEX `fk_rolesTiposOperaciones_roles1_idx` (`idRol` ASC),
  INDEX `fk_rolesTiposOperaciones_rolesOperaciones1_idx` (`idRolOperacion` ASC),
  CONSTRAINT `fk_rolesTiposOperaciones_roles1`
    FOREIGN KEY (`idRol`)
    REFERENCES `entregalo`.`roles` (`idRol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rolesTiposOperaciones_rolesOperaciones1`
    FOREIGN KEY (`idRolOperacion`)
    REFERENCES `entregalo`.`rolesOperaciones` (`idRolOperacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `entregalo`.`userTipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`userTipo` (
  `idUserTipo` INT(11) NOT NULL AUTO_INCREMENT,
  `nombreUserTipo` VARCHAR(80) CHARACTER SET 'utf8' NOT NULL,
  `estadoUserTipo` SMALLINT(6) NOT NULL DEFAULT '10',
  `creacionUserTipo` DATE NOT NULL,
  PRIMARY KEY (`idUserTipo`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `entregalo`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NOT NULL,
  `auth_key` VARCHAR(32) NOT NULL,
  `password_hash` VARCHAR(255) NOT NULL,
  `password_reset_token` VARCHAR(255) NULL DEFAULT NULL,
  `email` VARCHAR(255) NOT NULL,
  `status` SMALLINT(6) NOT NULL DEFAULT '10',
  `created_at` INT(11) NOT NULL,
  `updated_at` INT(11) NOT NULL,
  `idRol` INT(11) NOT NULL,
  `idUserTipo` INT(11) NOT NULL,
  `accessToken` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `password_reset_token_INDEX` (`password_reset_token` ASC),
  INDEX `fk_user_roles_idx` (`idRol` ASC),
  INDEX `fk_user_idUserTipo` USING BTREE (`idUserTipo` ASC),
  CONSTRAINT `fk_user_roles`
    FOREIGN KEY (`idRol`)
    REFERENCES `entregalo`.`roles` (`idRol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_userTipo`
    FOREIGN KEY (`idUserTipo`)
    REFERENCES `entregalo`.`userTipo` (`idUserTipo`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `entregalo`.`userDetalles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`userDetalles` (
  `idUserDetalles` INT(11) NOT NULL,
  `idUser` INT(11) NOT NULL,
  `nombreUserDetalles` VARCHAR(80) NOT NULL,
  `apellidoUserDetalles` VARCHAR(80) NOT NULL,
  `cargoUserDetalles` VARCHAR(80) NOT NULL,
  `estadoUserDetalles` SMALLINT(2) NOT NULL DEFAULT 10,
  `creacionUserDetalles` DATETIME NOT NULL,
  PRIMARY KEY (`idUserDetalles`),
  UNIQUE INDEX `idUser` (`idUser` ASC),
  CONSTRAINT `fk_userDetalle_a_user`
    FOREIGN KEY (`idUser`)
    REFERENCES `entregalo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Almacena información detallada de los usuarios internos de la herrramienta';


-- -----------------------------------------------------
-- Table `entregalo`.`userRegistroTipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`userRegistroTipo` (
  `idUserRegistroTipo` INT(11) NOT NULL AUTO_INCREMENT,
  `nombreUserRegistroTipo` VARCHAR(80) NOT NULL,
  `estadoUserRegistroTipo` SMALLINT(6) NOT NULL DEFAULT '10',
  `creacionUserRegistroTipo` DATE NOT NULL,
  PRIMARY KEY (`idUserRegistroTipo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `entregalo`.`userRegistro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`userRegistro` (
  `idUserRegistro` INT(11) NOT NULL AUTO_INCREMENT,
  `fechaHoraUserRegistro` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `observacionUserRegistro` VARCHAR(150) NOT NULL,
  `idUserRegistroTipo` INT(11) NOT NULL,
  `idUser` INT(11) NOT NULL,
  `estadoUserRegistro` SMALLINT(6) NOT NULL DEFAULT '10',
  `creacionUserRegistro` DATE NOT NULL,
  PRIMARY KEY (`idUserRegistro`),
  INDEX `fk_userRegistros_idUser` (`idUser` ASC),
  INDEX `fk_userRegistros_userRegistrosTipo` (`idUserRegistroTipo` ASC),
  CONSTRAINT `fk_userRegistros_idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `entregalo`.`user` (`id`),
  CONSTRAINT `fk_userRegistros_userRegistrosTipo`
    FOREIGN KEY (`idUserRegistroTipo`)
    REFERENCES `entregalo`.`userRegistroTipo` (`idUserRegistroTipo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `entregalo`.`tiposIdentificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`tiposIdentificacion` (
  `idTipoIdentificacion` INT(11) NOT NULL,
  `nombreTipoIdentificacion` VARCHAR(50) NOT NULL,
  `tipoPropietario` SMALLINT(2) NOT NULL,
  `estadoTipoIdentificacion` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`idTipoIdentificacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `entregalo`.`empresasServicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`empresasServicios` (
  `idEmpresaServicio` INT(11) NOT NULL,
  `idEmpresa` INT(11) NOT NULL,
  `idServicioDeEmpresa` INT(11) NOT NULL,
  `estadoEmpresaServicio` SMALLINT(2) NOT NULL COMMENT 'Una asociacion de empresa con un tipo de servicio no se podrá borrar pero si desactivar',
  PRIMARY KEY (`idEmpresaServicio`))
ENGINE = InnoDB
COMMENT = 'Guarda la relacón de los servicios que asignaron a una empresa (servicios que se le prestaran a esta)\n';


-- -----------------------------------------------------
-- Table `entregalo`.`empresas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`empresas` (
  `idEmpresa` INT(11) NOT NULL,
  `idTipoEmpresa` SMALLINT(2) NOT NULL COMMENT '1 Persona natural\n2 Persona jurídica',
  `idTipoIdentificacion` INT(11) NULL,
  `identificacion` VARCHAR(45) NOT NULL COMMENT 'Número de identificación (ejemplo el nit si es tipo juridico o cédula si es persona natural)',
  `nombreEmpresa` VARCHAR(50) NOT NULL,
  `estadoEmpresa` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`idEmpresa`),
  INDEX `fk_empresas_a_tiposDocumentos_idx` (`idTipoIdentificacion` ASC),
  CONSTRAINT `fk_empresas_a_tiposIdentificacion`
    FOREIGN KEY (`idTipoIdentificacion`)
    REFERENCES `entregalo`.`tiposIdentificacion` (`idTipoIdentificacion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_empresas_a_empresasServicios`
    FOREIGN KEY (`idEmpresa`)
    REFERENCES `entregalo`.`empresasServicios` (`idEmpresaServicio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Información de las empresas registradas en el sistema';


-- -----------------------------------------------------
-- Table `entregalo`.`zonas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`zonas` (
  `idZona` INT(11) NOT NULL,
  `idNivelGeografico3` INT(11) NOT NULL,
  `nombreZona` VARCHAR(50) NOT NULL,
  `estadoZona` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idZona`),
  INDEX `fk_zonas_a_nivelGeografico3_idx` (`idNivelGeografico3` ASC),
  CONSTRAINT `fk_zonas_a_nivelGeografico3`
    FOREIGN KEY (`idNivelGeografico3`)
    REFERENCES `entregalo`.`nivelGeografico3` (`nivelGeografico3`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Zonas en las que se clasifica la ubicación de las sucursales en una ciudad';


-- -----------------------------------------------------
-- Table `entregalo`.`empresasSucursales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`empresasSucursales` (
  `idEmpresaSucursal` INT(11) NOT NULL,
  `idEmpresa` INT(11) NOT NULL,
  `idNivelGeografico3` INT(11) NOT NULL,
  `idZona` INT(11) NULL,
  `nombreSucursal` VARCHAR(50) NOT NULL,
  `direccion` VARCHAR(80) NOT NULL,
  `estadoSucursal` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`idEmpresaSucursal`),
  INDEX `fk_empresasSucursales_a_nivelGeografico3_idx` (`idNivelGeografico3` ASC),
  INDEX `fk_empresasSucursales_a_zonas_idx` (`idZona` ASC),
  CONSTRAINT `fk_empresasSucursales_a_empresas`
    FOREIGN KEY (`idEmpresa`)
    REFERENCES `entregalo`.`empresas` (`idEmpresa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_empresasSucursales_a_nivelGeografico3`
    FOREIGN KEY (`idNivelGeografico3`)
    REFERENCES `entregalo`.`nivelGeografico3` (`nivelGeografico3`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_empresasSucursales_a_zonas`
    FOREIGN KEY (`idZona`)
    REFERENCES `entregalo`.`zonas` (`idZona`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `entregalo`.`clienteDetalles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`clienteDetalles` (
  `idClienteDetalles` INT(11) NOT NULL,
  `idUser` INT(11) NOT NULL,
  `idClienteSucursal` INT(11) NOT NULL,
  `nombreClienteDetalles` VARCHAR(80) NOT NULL,
  `apellidoClienteDetalles` VARCHAR(80) NULL,
  `creacionClienteDetalles` DATETIME NOT NULL,
  `idTipoDocumento` INT(11) NOT NULL,
  `documento` VARCHAR(20) NOT NULL,
  `estadoClienteDetalles` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`idClienteDetalles`),
  UNIQUE INDEX `idUser` (`idUser` ASC),
  INDEX `fk_clienteDetalles_a_empresasSucursales_idx` (`idClienteSucursal` ASC),
  INDEX `fk_clienteDetalles_a_tiposDocumentos_idx` (`idTipoDocumento` ASC),
  CONSTRAINT `fk_clienteDetalles_a_user`
    FOREIGN KEY (`idUser`)
    REFERENCES `entregalo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_clienteDetalles_a_empresasSucursales`
    FOREIGN KEY (`idClienteSucursal`)
    REFERENCES `entregalo`.`empresasSucursales` (`idEmpresaSucursal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_clienteDetalles_a_tiposIdentificacion`
    FOREIGN KEY (`idTipoDocumento`)
    REFERENCES `entregalo`.`tiposIdentificacion` (`idTipoIdentificacion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Almacena información detallada de los clientes, los clientes son los usuarios de las empresas pero también puede ser la razón de social de la empresa misma';


-- -----------------------------------------------------
-- Table `entregalo`.`tiposDocumentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`tiposDocumentos` (
  `idTipoDocumento` INT(11) NOT NULL,
  `nombreTipoDocumento` VARCHAR(50) NOT NULL,
  `tipoPropietario` SMALLINT(2) NOT NULL,
  `estadoTipoDocumento` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`idTipoDocumento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `entregalo`.`archivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`archivos` (
  `idArchivo` INT(11) NOT NULL,
  `idTipoDocumento` INT(11) NOT NULL,
  `idPropietario` INT(11) NOT NULL,
  `tipoPropietario` SMALLINT(2) NOT NULL,
  `rutaArchivo` VARCHAR(250) NOT NULL,
  `fechaCarga` DATETIME NOT NULL,
  `estadoArchivo` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idArchivo`),
  INDEX `fk_archivos_a_tiposDocumentos_idx` (`idTipoDocumento` ASC),
  CONSTRAINT `fk_archivos_a_tiposDocumentos`
    FOREIGN KEY (`idTipoDocumento`)
    REFERENCES `entregalo`.`tiposDocumentos` (`idTipoDocumento`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `entregalo`.`tiposVehiculos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`tiposVehiculos` (
  `idTipoVehiculo` INT(11) NOT NULL,
  `nombreTipoVehiculo` VARCHAR(450) NOT NULL,
  `estadoTipoVehiculo` SMALLINT(2) NULL,
  PRIMARY KEY (`idTipoVehiculo`),
  UNIQUE INDEX `estadoTipoVehiculo_UNIQUE` (`estadoTipoVehiculo` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `entregalo`.`mensajerosDetalles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`mensajerosDetalles` (
  `idMensajeroDetalle` INT(11) NOT NULL,
  `idTipoMensajero` INT(11) NOT NULL COMMENT 'Identifica si un mensajero es de planta o no',
  `nombreMensajeroDetalles` VARCHAR(80) NOT NULL,
  `apellidoMensajeroDetalles` VARCHAR(80) NOT NULL,
  `idUser` INT(11) NOT NULL,
  `idTipoDocumento` INT(11) NOT NULL,
  `documento` VARCHAR(20) NOT NULL,
  `idTipoVehiculo` INT(11) NOT NULL,
  `codigoVehiculo` VARCHAR(45) NOT NULL,
  `creacionMensajeroDetalles` DATETIME NOT NULL,
  `estadoMensajeroDetalles` SMALLINT(2) NOT NULL DEFAULT 10,
  PRIMARY KEY (`idMensajeroDetalle`),
  UNIQUE INDEX `idUser` (`idUser` ASC),
  INDEX `fk_mensajeroDetalles_a_tiposDocumentos_idx` (`idTipoDocumento` ASC),
  INDEX `fk_mensajerosDetalles_a_tiposVehiculos_idx` (`idTipoVehiculo` ASC),
  CONSTRAINT `fk_mensajeroDetalle_a_users`
    FOREIGN KEY (`idUser`)
    REFERENCES `entregalo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_mensajeroDetalles_a_tiposIdentificacion`
    FOREIGN KEY (`idTipoDocumento`)
    REFERENCES `entregalo`.`tiposIdentificacion` (`idTipoIdentificacion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_mensajerosDetalles_a_tiposVehiculos`
    FOREIGN KEY (`idTipoVehiculo`)
    REFERENCES `entregalo`.`tiposVehiculos` (`idTipoVehiculo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Almacena información detallada de los mensajeros';


-- -----------------------------------------------------
-- Table `entregalo`.`serviciosDeEmpresas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`serviciosDeEmpresas` (
  `idServicioDeEmpresa` INT(11) NOT NULL,
  `idTipoDeServicio` INT(11) NOT NULL COMMENT 'Identifica servicios de pago contra entrega o no\n',
  `nombreServicio` VARCHAR(50) NOT NULL,
  `terminosServicio` TEXT NOT NULL,
  `costoEnvio` VARCHAR(10) NOT NULL,
  `porcentajeContraentrega` FLOAT NULL,
  `estadoServicio` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idServicioDeEmpresa`),
  CONSTRAINT `fk_servicios_a_empresasServicios`
    FOREIGN KEY (`idServicioDeEmpresa`)
    REFERENCES `entregalo`.`empresasServicios` (`idEmpresaServicio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Contiene los tipos de servicios que se asignan a las empresas, cada registro de esta tabla es un acuerdo comercial ';


-- -----------------------------------------------------
-- Table `entregalo`.`terminosCondiciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`terminosCondiciones` (
  `idTerminosCondiciones` INT NOT NULL,
  `terminosCondiciones` VARCHAR(45) NOT NULL,
  `tipoPropietario` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idTerminosCondiciones`))
ENGINE = InnoDB
COMMENT = 'Texto de terminos y condiciones que aparecera a clientes y mensajeros';


-- -----------------------------------------------------
-- Table `entregalo`.`envios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`envios` (
  `idEnvio` INT(11) NOT NULL,
  `idEmpresaSucursal` INT(11) NOT NULL COMMENT 'Indica el origen del envio (todos los envios salen de las sucursales de los clientes)',
  `idMensajeroDetalles` INT(11) NOT NULL,
  `tipoEnvio` SMALLINT(2) NOT NULL COMMENT '1 Normal o 2 Contraentrega',
  `idServicioDeEmpresa` INT(11) NOT NULL,
  `idZonaDestino` INT(11) NULL,
  `prioridadEnvioMensajero` SMALLINT(3) NULL COMMENT 'campo para guardar en que numero con el que el mensajero organiza la entrega de sus envios',
  `fechaEstimadaDeEntrega` DATETIME NULL,
  `detallesEnvio` VARCHAR(250) NULL COMMENT 'Texto descriptivo para un envío',
  `informacionRemitente` VARCHAR(250) NULL,
  `costoProductoEnviado` FLOAT NULL COMMENT 'Se usa en caso de pago contra entrega',
  `direccionDestino` VARCHAR(150) NOT NULL,
  `idEstadoEnvio` INT(11) NOT NULL COMMENT 'Contraentrega\nNormal',
  PRIMARY KEY (`idEnvio`),
  INDEX `fk_envios_a_empresasSucursales_idx` (`idEmpresaSucursal` ASC),
  INDEX `fk_envios_a_servicios_idx` (`idServicioDeEmpresa` ASC),
  INDEX `fk_envios_a_mensajerosDetalles_idx` (`idMensajeroDetalles` ASC),
  INDEX `fk_envios_a_zonas_idx` (`idZonaDestino` ASC),
  CONSTRAINT `fk_envios_a_empresasSucursales`
    FOREIGN KEY (`idEmpresaSucursal`)
    REFERENCES `entregalo`.`empresasSucursales` (`idEmpresaSucursal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_envios_a_serviciosDeEmpresas`
    FOREIGN KEY (`idServicioDeEmpresa`)
    REFERENCES `entregalo`.`serviciosDeEmpresas` (`idServicioDeEmpresa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_envios_a_mensajerosDetalles`
    FOREIGN KEY (`idMensajeroDetalles`)
    REFERENCES `entregalo`.`mensajerosDetalles` (`idMensajeroDetalle`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_envios_a_zonas`
    FOREIGN KEY (`idZonaDestino`)
    REFERENCES `entregalo`.`zonas` (`idZona`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `entregalo`.`tiposRegistrosHistorialesEnvios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`tiposRegistrosHistorialesEnvios` (
  `idTipoRegistroHistorialesEnvios` INT(11) NOT NULL,
  `nombreRegistro` VARCHAR(150) NOT NULL,
  `estadoTipoRegistroHistorialesEnvios` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idTipoRegistroHistorialesEnvios`))
ENGINE = InnoDB
COMMENT = 'Guarda los tipos de acciones que se guardaran en el historial de evenntos de los envíos';


-- -----------------------------------------------------
-- Table `entregalo`.`historialEnvios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`historialEnvios` (
  `idHistorialEnvio` INT NOT NULL,
  `idTipoRegistroHistorialEnvios` INT(11) NOT NULL COMMENT 'Identificará si el envío fue creado, programado, esta en curso, fue entregado o el tipo de acción que se le ejecutó a un envío',
  `idEnvio` INT(11) NOT NULL,
  `detalleRegistro` VARCHAR(250) NULL,
  `fechaRegistro` DATETIME NOT NULL,
  PRIMARY KEY (`idHistorialEnvio`),
  INDEX `fk_historialEnvios_envios_idx` (`idEnvio` ASC),
  INDEX `fk_historialEnvios_a_TiposRegistrosHistorialesEnvios_idx` (`idTipoRegistroHistorialEnvios` ASC),
  CONSTRAINT `fk_historialEnvios_a_envios`
    FOREIGN KEY (`idEnvio`)
    REFERENCES `entregalo`.`envios` (`idEnvio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_historialEnvios_a_TiposRegistrosHistorialesEnvios`
    FOREIGN KEY (`idTipoRegistroHistorialEnvios`)
    REFERENCES `entregalo`.`tiposRegistrosHistorialesEnvios` (`idTipoRegistroHistorialesEnvios`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `entregalo`.`formasDePago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`formasDePago` (
  `idFormasDePago` INT(11) NOT NULL,
  `nombreFormaDePago` VARCHAR(50) NOT NULL,
  `estadoFormaDePago` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idFormasDePago`))
ENGINE = InnoDB
COMMENT = 'Tabla para guardar si al mensajero sele paga mensual, quicenal, semanal o diario';


-- -----------------------------------------------------
-- Table `entregalo`.`serviciosDeMensajeros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`serviciosDeMensajeros` (
  `idServicioDeMensajero` INT(11) NOT NULL,
  `idFormasDePago` INT(11) NOT NULL,
  `idTipoDeServicioDeMensajero` INT(11) NOT NULL COMMENT 'Identifica si el tipo de servicio es para mensajeros de planta o no\n',
  `nombreServicio` VARCHAR(50) NOT NULL,
  `terminosServicio` TEXT NOT NULL,
  `costoEnvio` VARCHAR(10) NOT NULL,
  `porcentajeContraentrega` FLOAT NULL,
  `estadoServicio` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idServicioDeMensajero`),
  INDEX `fk_serviciosDeMensajeros_a_formasDePago_idx` (`idFormasDePago` ASC),
  CONSTRAINT `fk_serviciosDeMensajeros_a_formasDePago`
    FOREIGN KEY (`idFormasDePago`)
    REFERENCES `entregalo`.`formasDePago` (`idFormasDePago`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'En esta tabla se guarda la especificación del servicio que puede prestar un mensajero, mediante la tabla mensajerosServicios, es que se asocia un tipo de servicio a un mensajero';


-- -----------------------------------------------------
-- Table `entregalo`.`mensajerosServicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`mensajerosServicios` (
  `idMensajeroServicio` INT(11) NOT NULL,
  `idMensajeroDetalles` INT(11) NOT NULL,
  `idServicioDeMensajero` INT(11) NOT NULL,
  PRIMARY KEY (`idMensajeroServicio`),
  INDEX `fk_mensajerosServicios_a_mensajerosDetalles_idx` (`idMensajeroDetalles` ASC),
  INDEX `fk_mensajerosServicios_a_seviciosDeMensajeros_idx` (`idServicioDeMensajero` ASC),
  CONSTRAINT `fk_mensajerosServicios_a_mensajerosDetalles`
    FOREIGN KEY (`idMensajeroDetalles`)
    REFERENCES `entregalo`.`mensajerosDetalles` (`idMensajeroDetalle`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_mensajerosServicios_a_seviciosDeMensajeros`
    FOREIGN KEY (`idServicioDeMensajero`)
    REFERENCES `entregalo`.`serviciosDeMensajeros` (`idServicioDeMensajero`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Permite asociar un tipo de servicioDeMensajero a un mensajero';


-- -----------------------------------------------------
-- Table `entregalo`.`mensajerosDetallesZonas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`mensajerosDetallesZonas` (
  `idMensajeroDetalleZona` INT(11) NOT NULL,
  `idMensajeroDetalle` INT(11) NOT NULL,
  `idZona` INT(11) NOT NULL,
  PRIMARY KEY (`idMensajeroDetalleZona`),
  INDEX `fk_mensajerosDetallesZonas_mensajerosDetalles_idx` (`idMensajeroDetalle` ASC),
  INDEX `fk_mensajerosDetallesZonas_a_Zonas_idx` (`idZona` ASC),
  CONSTRAINT `fk_mensajerosDetallesZonas_mensajerosDetalles`
    FOREIGN KEY (`idMensajeroDetalle`)
    REFERENCES `entregalo`.`mensajerosDetalles` (`idMensajeroDetalle`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_mensajerosDetallesZonas_a_Zonas`
    FOREIGN KEY (`idZona`)
    REFERENCES `entregalo`.`zonas` (`idZona`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Permite asignar varias zonas a un mensajero\n';


-- -----------------------------------------------------
-- Table `entregalo`.`datosContacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`datosContacto` (
  `idDatosContacto` INT NOT NULL,
  `informacion` VARCHAR(250) NOT NULL,
  `tipoPropietario` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idDatosContacto`))
ENGINE = InnoDB
COMMENT = 'Información que se colocará en el footer de mensajeros y clientes';


-- -----------------------------------------------------
-- Table `entregalo`.`serviciosDeEmpresasTemplates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `entregalo`.`serviciosDeEmpresasTemplates` (
  `idServicioDeEmpresa` INT(11) NOT NULL,
  `idTipoDeServicio` INT(11) NOT NULL COMMENT 'Identifica servicios de pago contra entrega o no\n',
  `nombreServicio` VARCHAR(50) NOT NULL,
  `terminosServicio` TEXT NOT NULL,
  `costoEnvio` VARCHAR(10) NOT NULL,
  `porcentajeContraentrega` FLOAT NULL,
  `estadoServicio` SMALLINT(2) NOT NULL,
  PRIMARY KEY (`idServicioDeEmpresa`))
ENGINE = InnoDB
COMMENT = 'Contiene los modelos de  los tipos de servicios que pueden utilizar las empresas';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
